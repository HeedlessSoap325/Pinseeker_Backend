spring.application.name=pinseekerbackend

#The API will run on Port 8000 instead of the default 8080 port
server.port=8000

#URL to your Database, in my case, a local instance of postgres
spring.datasource.url=jdbc:postgresql://localhost:2345/pinseeker
#The user of the database, it needs all rights to function properly
spring.datasource.username=pinseeker
#password of the above-given user
spring.datasource.password=pinseeker

#Class of the PostgreSQL Driver class
spring.datasource.driver-class-name=org.postgresql.Driver

#Disables logging of every SQL Request in the console
spring.jpa.show-sql=false
spring.datasource.dbcp2.test-while-idle=true
spring.datasource.dbcp2.validation-query=select 1
#Updates the Database schema if changes were made, for development, create would be better
spring.jpa.hibernate.ddl-auto=create

#PostGIS Dialect migrated and is now available in PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Name and interpret JSON-Properties with SNAKE_CASE (underscores) instead of CAMEL_CASE (All together with Upper-Case)
spring.jackson.property-naming-strategy=SNAKE_CASE

file.upload-dir=uploads

spring.web.resources.static-locations=file:${file.upload-dir}/

#DEBUGGING
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE